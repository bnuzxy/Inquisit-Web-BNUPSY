// 1-首先定义用到的标签
**************************************************************************************************************
**************************************************************************************************************
<item attributeAlabel>
	/1 = "好"
</item>

<item attributeBlabel>
	/1 = "坏"
</item>

<item targetALabel>
	/1 = "白人"
</item>

<item targetBLabel>
	/1 = "黑人"
</item>

// 2-其次定义用到的刺激
**************************************************************************************************************
**************************************************************************************************************
<item attributeA>
	/1 = "有趣"
	/2 = "极佳"
	/3 = "帅气"
	/4 = "高尚"
</item>

<item attributeB>
	/1 = "无聊"
	/2 = "糟糕"
	/3 = "丑陋"
	/4 = "猥琐"
</item>

<picture targetA1>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("白人1.jpg")
	/size = (300,300)
</picture>

<picture targetA2>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("白人2.jpg")
	/size = (300,300)
</picture>

<picture targetA3>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("白人3.jpg")
	/size = (300,300)
</picture>

<picture targetA4>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("白人4.jpg")
	/size = (300,300)
</picture>

<picture targetB1>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("黑人1.jpg")
	/size = (300,300)
</picture>

<picture targetB2>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("黑人2.jpg")
	/size = (300,300)
</picture>

<picture targetB3>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("黑人3.jpg")
	/size = (300,300)
</picture>

<picture targetB4>
	/erase = True(0,0,0) 
	/halign = center
	/valign = center
	/items = ("黑人4.jpg")
	/size = (300,300)
</picture>


// 3-再次，定义用到的指导语，这个部分非常复杂，涉及到item的相互引用，请一定注意跟上学习！
**************************************************************************************************************
**************************************************************************************************************
// 实验开始前的总指导语,这个地方用到了很多引用，即在字符串中加入特定的值，实现联动修改功能，只要变化item定义中的值，自然的后续内容也会自动更新。

// 注意转义语法结构，~是转义字符，关键字前加上~就变成了常规字符。比如引号前加~，打出来就是引号了，而不再是代表字符串的开始或结束。~n代表换行，这个跟HTML一样

// 注意引用语法结构，<%item.attributealabel.item.1%>的含义就是引用attributeAlable这个item中的第一个item的值，插入到字符串当中。

<item introinstructions>
	/ 1 = "在这个任务中,需要你根据呈现的词汇做出按键反应，如果呈现的是'<%item.attributeALabel.item.1%>'的词汇或者<%item.targetALabel.1%> 的照片，请您按 ~"I~" 键，如果呈现的是'<%item.attributeBLabel.item.1%>' 的词汇，或者是跟前面要求<%item.targetALabel.1%>类别不同的照片，请按~"E~" 键.最开始的几组练习会帮您熟悉这种按键设定，请您尽快的最初归类按键反应并尽量少的犯错。 如果您按错了按键，屏幕上会呈现一个红色的 ~"X~". 这样的情况下请尽快的按另外一个键来更正您的反应。~n~n请按空格键继续"
	/ 2 = "看到 <%item.attributeALabel.item.1%>类别的词汇是按 I 键~n~n看到其他类别的词汇请按 E 键~n~n~n您的反应越快越好~n~n请按空格键继续"
</item>


// 具体到每个block里，要求按键反应都是不一样的，可以通过一个指导语定义，根据具体的来定义具体的类型，例如下面的这个定义，用currentTarget变量来定义要求反应的类别，这个变量在block开始的时候进行赋值，那么在指导语里就能对应显示了。

<item testinstructions1>
	/ 1 = "看到<%item.attributeALabel.item.1%> 或 <%values.currentTarget%>的照片，请按 I 键~n~n看到其他类别的词汇或照片请按 E 键~n~n~n您的反应越快越好~n~n请按空格键开始"
</item>

<item testinstructions2>
	/ 1 = "看到<%item.attributeBLabel.item.1%> 或 <%values.currentTarget%>的照片，请按 I 键~n~n看到其他类别的词汇或照片请按 E 键~n~n~n您的反应越快越好~n~n请按空格键开始"
</item>
// 指导语界面上还需要呈现给被试各个类别都有哪些词汇，呈现方法如下，也是采用item引用的方式。因为这个部分后面也需要根据需要呈现

<item attributeAFocusInstruct>
	/ 1 = "<%item.attributeALabel.1%>~n<%item.attributeA.1%> <%item.attributeA.2%> <%item.attributeA.3%> <%item.attributeA.4%>"
</item>

<item attributeBFocusInstruct>
	/ 1 = "<%item.attributeBLabel.1%>~n<%item.attributeB.1%> <%item.attributeB.2%> <%item.attributeB.3%> <%item.attributeB.4%>"
</item>

<item targetAFocusInstruct>
	/ 1 = "<%item.targetALabel.1%>"
</item>

<item targetBFocusInstruct>
	/ 1 = "<%item.targetBLabel.1%>"
</item>

// 4-到这里，我们已经把需要呈现的刺激内容都填写完整了，现在需要定义刺激呈现的位置，刺激呈现的形式，我们要根据之前画的图纸
//   仔细区分类别，分别进行定义。
**************************************************************************************************************
**************************************************************************************************************
// 首先我们来定义指导语的呈现方式，这个是最简单的，因为格式都一模一样。

<text introinstructions>
/ items = introinstructions
/ size = (90%, 50%)
/ position = (50%, 40%)
/ select = sequence
/ resetinterval = 20
/ valign = top
/ hjustify = center
/ vjustify = top
</text>

<text testInstructions1>
/ items = testInstructions1
/ size = (90%, 50%)
/ position = (50%, 50%)
/ valign = top
/ hjustify = center
/ vjustify = top
</text>

<text testInstructions2>
/ items = testInstructions2
/ size = (90%, 50%)
/ position = (50%, 50%)
/ valign = top
/ hjustify = center
/ vjustify = top
</text>
// 指导语中需要显示 I 按键针对的刺激类别，因此这个地方是因block而定的，所以可以先把格式设置好，具体item内容可以通过values.currentTarget进行定义调用。

// items先设为空，在block中进行定义。

<text topFocusInstruct>
/ items = ("")
/ valign = bottom
/ halign = center
/ position = (50%, 15%)
/ size = (100%, 12%)
/ txcolor = aqua
/ fontstyle = ("Arial", 5%)
</text>

<text orInstruct>
/ items = ("or")
/ valign = center
/ halign = center
/ position = (50%, 17.5%)
/ txcolor = white
/ fontstyle = ("Arial", 3%)
</text>

<text bottomFocusInstruct1>
/ items = attributeAFocusInstruct
/ valign = top
/ halign = center
/ position = (50%, 20%)
/ size = (100%, 12%)
/ txcolor = yellow
/ fontstyle = ("Arial", 5%)
</text>

<text bottomFocusInstruct2>
/ items = attributeBFocusInstruct
/ valign = top
/ halign = center
/ position = (50%, 20%)
/ size = (100%, 12%)
/ txcolor = yellow
/ fontstyle = ("Arial", 5%)
</text>
// 之后我们来定义刺激词汇的呈现方式，用于提醒被试呈现刺激的类别。

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 10%)
/ txcolor = yellow
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 10%)
/ txcolor = yellow
</text>

<text error>
/ position = (50%, 75%)
/ items = ("×")
/ color = red
/ fontstyle = ("Arial", 10%)
</text>

// 在每个block中，都需要把正确按键反应对应的属性类别放在最上方，这个地方刺激呈现的方式也是需要定义的。

// 这个放在第一页指导语上

<text attributeAFocusLabel>
/ items = attributeALabel
/ valign = top
/ halign = center
/ position = (50%, 5%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text attributeBFocusLabel>
/ items = attributeBLabel
/ valign = top
/ halign = center
/ position = (50%, 5%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>
// 这三个放在每个block开头的指导语上

<text targetFocusLabel>
/ items = ("<%values.currentTarget%>")
/ valign = top
/ halign = center
/ position = (50%, 5%)
/ txcolor = aqua
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text orLabel>
/ items = ("or")
/ valign = top
/ halign = center
/ position = (50%, 10%)
/ txcolor = white
/ fontstyle = ("Arial", 3%)
/ erase = false
</text>


<text orAttributeAFocusLabel>
/ items = attributeALabel
/ valign = top
/ halign = center
/ position = (50%, 15%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text orAttributeBFocusLabel>
/ items = attributeBLabel
/ valign = top
/ halign = center
/ position = (50%, 15%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text progress>
/ position = (50%, 95%)
/ items = ("(Block <%expressions.currentblocknumber%> of <%expressions.totalblockcount %>)")
/ color = white
/ fontstyle = ("Arial", 2%)
</text>

<shape eraseLabels>
/ color = black
/ shape = rectangle
/ size = (50%, 20%)
/ position = (50%,  10%)
</shape>


// 5- 前面已经定义所需要的刺激呈现方式，现在就可以放trial啦
**************************************************************************************************************
**************************************************************************************************************
<trial attributeA>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial attributeB>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>

<trial attributeC>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>

<trial attributeD>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial targetALeft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1-4 = noreplacenorepeat(targetA1,targetA2,targetA3,targetA4)]
/ posttrialpause = 250
</trial>

<trial targetARight>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1-4 = noreplacenorepeat(targetA1,targetA2,targetA3,targetA4)]
/ posttrialpause = 250
</trial>

<trial targetBLeft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1-4 = noreplacenorepeat(targetB1,targetB2,targetB3,targetB4)]
/ posttrialpause = 250
</trial>

<trial targetBRight>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1-4 = noreplacenorepeat(targetB1,targetB2,targetB3,targetB4)]
/ posttrialpause = 250
</trial>

<trial introinstructions1>
/ ontrialbegin = [if ( script.currentblock == "attributes" ) {text.bottomFocusInstruct1.1 = item.attributeAFocusInstruct.1; values.currentTarget = item.attributeAlabel.1;} ]
/ stimulustimes = [1=introinstructions, bottomFocusInstruct1, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial introinstructions2>
/ ontrialbegin = [if ( script.currentblock == "attributes" ) {text.bottomFocusInstruct2.1 = item.attributeBFocusInstruct.1; values.currentTarget = item.attributeBlabel.1;} ]
/ stimulustimes = [1=introinstructions, bottomFocusInstruct2, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial testinstructions1>
/ stimulustimes = [1=testinstructions1, topFocusInstruct, orInstruct, bottomFocusInstruct1, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial testinstructions2>
/ stimulustimes = [1=testinstructions2, topFocusInstruct, orInstruct, bottomFocusInstruct2, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial showAttributeLabel>
/ stimulusframes = [1=attributeAFocusLabel]
/ response = noresponse
/ recorddata = false
</trial>

<trial showLabels1>
/ stimulusframes = [1=targetFocusLabel, orLabel, orAttributeAFocusLabel]
/ response = noresponse
/ recorddata = false
</trial>

<trial showLabels2>
/ stimulusframes = [1=targetFocusLabel, orLabel, orAttributeBFocusLabel]
/ response = noresponse
/ recorddata = false
</trial>

<trial eraseLabels>
/ stimulusframes = [1=eraseLabels]
/ response = noresponse
/ recorddata = false
</trial>

<trial summary>
/ ontrialbegin = [values.magnitude = "几乎没有"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "有一点点"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "中度的"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "很强的"]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.preferred = item.targetALabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.preferred = item.targetBLabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.notpreferred= item.targetALabel.1]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.notpreferred= item.targetBLabel.1]
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ skip = [values.skipsummary]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests <% values.magnitude %> automatic preference for <% expressions.preferred %> compared to <% expressions.notpreferred %>.~n~n~nPress the spacebar to complete this session.")  
/ size = (60%, 80%)
/ hjustify = left
 </text>

// 6- 现在定义block
**************************************************************************************************************
**************************************************************************************************************

<block intro>
/ trials = [1 = introinstructions1]
</block>


<block short_a>
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=testInstructions1; 2=showLabels1;
  3-6 = noreplace(targetARight, targetBLeft);
  8,10,12,14 = noreplace(targetARight, targetBLeft);
  7,9,11,13 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block short_b>
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=testInstructions1; 2=showLabels1;
  3-6 = noreplace(targetBRight, targetALeft);
  8,10,12,14 = noreplace(targetBRight, targetALeft);
  7,9,11,13 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>


<block A>
/ skip = [values.extended == false && block.A.totalcount >=11]
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=testInstructions1; 2=showLabels1;
  3-6 = noreplace(targetARight, targetBLeft);
  8,10,12,14,16,18,20,22 = noreplace(targetARight, targetBLeft);
  7,9,11,13,15,17,19,21 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A1sum =  values.A1sum + block.A.latency]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A1n += 1]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A1ss =  values.A1ss  + (block.A.latency * block.A.latency)]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A2sum =  values.A2sum + block.A.latency]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A2n += 1]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.A2ss =  values.A2ss  + (block.A.latency * block.A.latency)]
/ ontrialend = [if (block.A.latency  <= 10000 && block.A.currenttrialnumber >= 7 ) values.n_correct += block.a.correct]
</block>

<block B>
/ skip = [values.extended == false && block.B.totalcount >=1]
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=testInstructions1;2=showLabels1;
  3-6 = noreplace(targetBRight, targetALeft);
  8,10,12,14,16,18,20,22= noreplace(targetBRight, targetALeft);
  7,9,11,13,15,17,19,21= noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B1sum =  values.B1sum + block.B.latency]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B1n +=  1]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B1ss =  values.B1ss  + (block.B.latency * block.B.latency)]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B2sum =  values.B2sum + block.B.latency]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B2n +=  1]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.B2ss =  values.B2ss  + (block.B.latency * block.B.latency)]
/ ontrialend = [if (block.B.latency  <= 10000 && block.B.currenttrialnumber >= 7 ) values.n_correct += block.B.correct]
</block>

<block C>
/ skip = [values.extended == false && block.C.totalcount >=11]
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=testInstructions2; 2=showLabels2;
  3-6 = noreplace(targetARight, targetBLeft);
  8,10,12,14,16,18,20,22 = noreplace(targetARight, targetBLeft);
  7,9,11,13,15,17,19,21 = noreplace(attributeC, attributeD)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.C.totalcount == 0 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C1sum =  values.C1sum + block.C.latency]
/ ontrialend = [if (block.C.totalcount == 0 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C1n += 1]
/ ontrialend = [if (block.C.totalcount == 0 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C1ss =  values.C1ss  + (block.C.latency * block.C.latency)]
/ ontrialend = [if (block.C.totalcount == 1 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C2sum =  values.C2sum + block.C.latency]
/ ontrialend = [if (block.C.totalcount == 1 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C2n += 1]
/ ontrialend = [if (block.C.totalcount == 1 && block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.C2ss =  values.C2ss  + (block.C.latency * block.C.latency)]
/ ontrialend = [if (block.C.latency  <= 10000 && block.C.currenttrialnumber >= 7 ) values.n_correct += block.C.correct]
</block>

<block D>
/ skip = [values.extended == false && block.D.totalcount >=1]
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=testInstructions2;2=showLabels2;
  3-6 = noreplace(targetBRight, targetALeft);
  8,10,12,14,16,18,20,22= noreplace(targetBRight, targetALeft);
  7,9,11,13,15,17,19,21= noreplace(attributeC, attributeD)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.D.totalcount == 0 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D1sum =  values.D1sum + block.D.latency]
/ ontrialend = [if (block.D.totalcount == 0 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D1n +=  1]
/ ontrialend = [if (block.D.totalcount == 0 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D1ss =  values.D1ss  + (block.D.latency * block.D.latency)]
/ ontrialend = [if (block.D.totalcount == 1 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D2sum =  values.D2sum + block.D.latency]
/ ontrialend = [if (block.D.totalcount == 1 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D2n +=  1]
/ ontrialend = [if (block.D.totalcount == 1 && block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.D2ss =  values.D2ss  + (block.D.latency * block.D.latency)]
/ ontrialend = [if (block.D.latency  <= 10000 && block.D.currenttrialnumber >= 7 ) values.n_correct += block.D.correct]
</block>

<block summary>
/ trials = [1=summary]
/ recorddata = false
</block>



<expt>
/ subjects = (1 of 4)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2= short_a; 3 = short_b; 4=A; 5=B;  6=C; 7=D; 8=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/ subjects = (2 of 4)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2= short_b; 3 = short_a; 4=B;5=C; 6=D; 7=A; 8=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/ subjects = (3 of 4)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2= short_a; 3 = short_b; 4=C; 5=D; 6=A; 7=B; 8=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/ subjects = (4 of 4)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2= short_b; 3 = short_a; 4=D; 5=A; 6=B; 7=C; 8=summary]
/onexptend = [values.completed = 1]
</expt>
***********************************************************************
定义data file
***********************************************************************
<data>
/file = "BriefIAT_rawdata.iqdat"
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, response, correct, latency, 
					stimulusnumber, stimulusitem, expressions.d1, expressions.d2, expressions.d, expressions.percentcorrect]
/separatefiles = true
</data>



<summarydata >
/file = "BriefIAT_summary.iqdat"
/columns = [script.filename, script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed,
expressions.d1, expressions.d2, expressions.d, expressions.percentcorrect]
</summarydata>


<values>
/completed = 0
/ A1sum = 0
/ A2sum = 0
/ B1sum = 0
/ B2sum = 0
/ A1n = 0
/ A2n = 0
/ B1n = 0
/ B2n = 0
/ A1ss = 0
/ A2ss = 0
/ B1ss = 0
/ B2ss = 0
/ C1sum = 0
/ C2sum = 0
/ D1sum = 0
/ D2sum = 0
/ C1n = 0
/ C2n = 0
/ D1n = 0
/ D2n = 0
/ C1ss = 0
/ C2ss = 0
/ D1ss = 0
/ D2ss = 0
/ magnitude = "unknown"
/ currentTarget = ""
/ n_correct = 0
</values>



<expressions>
/ A1m = values.A1sum / values.A1n
/ A2m = values.A2sum / values.A2n
/ B1m = values.B1sum / values.B1n
/ B2m = values.B2sum / values.B2n
/ A1sd = sqrt((values.A1ss - (values.A1n* (expressions.A1m * expressions.A1m))) / (values.A1n - 1))
/ A2sd = sqrt((values.A2ss - (values.A2n* (expressions.A2m * expressions.A2m))) / (values.A2n - 1))
/ B1sd = sqrt((values.B1ss - (values.B1n* (expressions.B1m * expressions.B1m))) / (values.B1n - 1))
/ B2sd = sqrt((values.B2ss - (values.B2n* (expressions.B2m * expressions.B2m))) / (values.B2n - 1))
/ sd1 = sqrt((((values.A1n - 1) * (expressions.A1sd * expressions.A1sd) + (values.B1n - 1) * (expressions.B1sd * expressions.B1sd)) + ((values.A1n + values.B1n) * ((expressions.A1m - expressions.B1m) * (expressions.A1m - expressions.B1m)) / 4) ) / (values.A1n + values.B1n - 1) )
/ sd2 = sqrt((((values.A2n - 1) * (expressions.A2sd * expressions.A2sd) + (values.B2n - 1) * (expressions.B2sd * expressions.B2sd)) + ((values.A2n + values.B2n) * ((expressions.A2m - expressions.B2m) * (expressions.A2m - expressions.B2m)) / 4) ) / (values.A2n + values.B2n - 1) )
/ d1 = (expressions.B1m - expressions.A1m) / expressions.sd1
/ d2 = (expressions.B2m - expressions.A2m) / expressions.sd2
/ d = if ( values.extended ) { (d1+d2) / 2 } else { d1 };
/ currentblocknumber = max(expt.1.currentblocknumber, expt.2.currentblocknumber)
/ preferred = "unknown"
/ notpreferred = "unknown"
/ totalblockcount = if (values.extended) {expt.1.blockcount} else {expt.1.blockcount-2}
/ percentcorrect = (values.n_correct/ (values.a1n + values.a2n + values.b1n + values.b2n)) * 100
</expressions>





<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = black
/ txbgcolor = black
/ txcolor = white
/ minimumversion = "4.0.0.0"
</defaults>


<values>
/ skipsummary = false
/ extended = true
</values>
